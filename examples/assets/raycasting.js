import{a as k,e as L,V as b,g as v,o as x,p as R,f as E,d as M}from"./encoding-OofKfb5O.js";import{bU as S,bV as _,bW as B,bX as C,bY as I,bZ as U,b_ as j,b$ as G,c0 as w,c1 as f,c2 as F}from"./pako.esm-CxPC41x8.js";const c=new S,V=c.get(_),t=V.create();t.scene=new B(c);t.scene.setup();t.scene.three.background=null;const p=document.getElementById("container");t.renderer=new C(c,p);t.camera=new I(c);t.camera.controls.setLookAt(183,11,-102,27,-52,-11);c.init();const A=c.get(U);A.create(t);const P="https://thatopen.github.io/engine_fragment/resources/worker.mjs",T=await fetch(P),W=await T.text(),X=new File([new Blob([W])],"worker.mjs",{type:"text/javascript"}),Y=URL.createObjectURL(X),r=new j(Y);t.camera.controls.addEventListener("rest",()=>r.update(!0));t.camera.controls.addEventListener("update",()=>r.update());r.models.list.onItemSet.add(({value:e})=>{e.useCamera(t.camera.three),t.scene.three.add(e.object),r.update(!0)});const $=await fetch("https://thatopen.github.io/engine_fragment/resources/frags/school_arq.frag"),q=await $.arrayBuffer(),z=await r.load(q,{modelId:"example"}),D=async e=>{const n=[];for(const[s,g]of r.models.list){const u=await g.raycast(e);u&&n.push(u)}if(await Promise.all(n),n.length===0)return null;let o=n[0],l=o.distance;for(let s=1;s<n.length;s++)n[s].distance<l&&(l=n[s].distance,o=n[s]);return o},a=new k;let h=e=>{};p.addEventListener("pointermove",async e=>{a.x=e.clientX,a.y=e.clientY;const n=await D({camera:t.camera.three,mouse:a,dom:t.renderer.three.domElement});h(n)});const H=new L().setFromPoints([new b(0,0,0),new b(0,0,2)]),O=new v({color:"#6528d7"}),d=new x(H,O);t.scene.three.add(d);h=e=>{if(d.visible=!!e,!e)return;console.log(e);const{point:n,normal:o}=e;if(!o)return;d.position.copy(n);const l=n.clone().add(o);d.lookAt(l)};let y=e=>{};p.addEventListener("click",async e=>{a.x=e.clientX,a.y=e.clientY;const n=await z.raycast({camera:t.camera.three,mouse:a,dom:t.renderer.three.domElement});y(n)});const Z=new R(.4),J=new E({color:"#bcf124",transparent:!0,opacity:.8});y=e=>{if(!e)return;const{point:n}=e,o=new M(Z,J);o.position.copy(n),t.scene.three.add(o)};G.init();const m=w.create(()=>f`
    <bim-panel id="controls-panel" active label="Raycasting" class="options-menu">
      <bim-panel-section fixed label="Info">
        <bim-label style="white-space: normal;">ðŸ’¡ To better experience this tutorial, open your browser console to see the data logs.</bim-label>
      </bim-panel-section>
    </bim-panel>
  `);document.body.append(m);const K=w.create(()=>f`
    <bim-button class="phone-menu-toggler" icon="solar:settings-bold"
      @click=${()=>{m.classList.contains("options-menu-visible")?m.classList.remove("options-menu-visible"):m.classList.add("options-menu-visible")}}>
    </bim-button>
  `);document.body.append(K);const i=new F;i.showPanel(2);document.body.append(i.dom);i.dom.style.left="0px";i.dom.style.zIndex="unset";t.renderer.onBeforeUpdate.add(()=>i.begin());t.renderer.onAfterUpdate.add(()=>i.end());
