import{c5 as x,c6 as T,c7 as W,c8 as D,c9 as E,ca as M,cb as z,cm as b,bS as O,cc as _,cd as S,ce as $,cf as B}from"./pako.esm-9qfSKSXL.js";import{R as w}from"./rendered-faces-DtNZp-Dg.js";const m=new x,U=m.get(T),a=U.create();a.scene=new W(m);a.scene.setup();a.scene.three.background=null;const k=document.getElementById("container");a.renderer=new D(m,k);a.camera=new E(m);a.camera.controls.setLookAt(183,11,-102,27,-52,-11);m.init();const j=m.get(M);j.create(a);const q="https://thatopen.github.io/engine_fragment/resources/worker.mjs",i=new z(q);a.camera.controls.addEventListener("rest",()=>i.update(!0));i.models.list.onItemSet.add(({value:e})=>{e.useCamera(a.camera.three),a.scene.three.add(e.object),i.update(!0)});const G=await fetch("/resources/frags/school_arq.frag"),N=await G.arrayBuffer(),l=await i.load(N,{modelId:"example"});let s=null,d=null;const V=async()=>{if(!s)return;const[e]=await l.getHighlight([s]);d=e??null},L=async()=>{s&&(d?(await l.highlight([s],d),d=null):await l.resetHighlight([s]))};let h={color:new b("gold"),renderedFaces:w.TWO,opacity:1,transparent:!1,customId:"selection"};const X=e=>{const t=[...i.models.materials.list.values()].find(o=>o.userData.customId==="selection");t&&"color"in t?t.color=e:h={...h,color:e}},A=async()=>{s&&await l.highlight([s],h)},C=new O;k.addEventListener("click",async e=>{C.x=e.clientX,C.y=e.clientY;const t=await l.raycast({camera:a.camera.three,mouse:C,dom:a.renderer.three.domElement}),o=[];t?(o.push(L()),s=t.localId,o.push(V(),A())):(o.push(L()),s=null),o.push(i.update(!0)),Promise.all(o)});const Y=e=>{const t=`#${Math.floor(Math.random()*16777215).toString(16).padStart(6,"0")}`;return{color:new b(t),renderedFaces:w.TWO,opacity:1,transparent:!1,customId:e}};let v=(e,t)=>{};const F=async(e,t)=>{const o=[];for(const c of e){const f=await l.getItemsOfCategory(c),p=(await Promise.all(f.map(r=>r.getLocalId()))).filter(r=>r!==null);if(p.length===0)continue;let n;t?n={color:t,renderedFaces:w.TWO,opacity:1,transparent:!1,customId:c}:n=Y(c),o.push(l.highlight(p,n)),v(c,n.color),s&&p.includes(s)&&(d=n)}s&&o.push(A()),o.push(i.update(!0)),await Promise.all(o)},J=async()=>{const e=await l.getCategories();await F(e)};let H=()=>{};const K=async()=>{await l.resetHighlight(),H(),s&&(d=null,await l.highlight([s],h))},Q=async()=>(await l.getHighlightItemIds()).filter(t=>t!==s);_.init();let y="#ffffff",I="#ffffff";const[g,R]=S.create(e=>{const t=async({target:n})=>{n.loading=!0,await J(),n.loading=!1},o=async()=>{await K(),await i.update(!0)},c=({target:n})=>{const r=new b(n.color);X(r)},f=({target:n},r)=>{const P=new b(n.color);F(r,P)};return $`
    <bim-panel id="controls-panel" active label="Materials Management" class="options-menu">
      <bim-panel-section label="Controls">
        <bim-color-input color="#ffd700" label="Highlight Color" @input=${c}></bim-color-input>
        <bim-button label="Apply Random Colors" @click=${t}></bim-button>
        <bim-button label="Reset Colors" @click=${o}></bim-button>
      </bim-panel-section>
      <bim-panel-section label="Category Colors">
        <bim-color-input color=${y} label="IfcWall" @input=${n=>f(n,["IFCWALL","IFCWALLSTANDARDCASE"])}></bim-color-input>
        <bim-color-input color=${I} label="IfcPlate" @input=${n=>f(n,["IFCPLATE"])}></bim-color-input>
      </bim-panel-section>
      <bim-panel-section label="Other">
        <bim-label style="white-space: normal;">ðŸ’¡ To better experience this section, open your browser console to see the data logs.</bim-label>
        <bim-button label="Log Colorized Ids" @click=${async()=>{const n=await Q();console.log(n)}}></bim-button>
      </bim-panel-section>
    </bim-panel>
  `},{});H=()=>{y="#ffffff",I="#ffffff",R()};v=(e,t)=>{let o=!1;e==="IFCWALL"?(y=`#${t.getHexString()}`,o=!0):e==="IFCPLATE"&&(I=`#${t.getHexString()}`,o=!0),o&&R()};document.body.append(g);const Z=S.create(()=>$`
    <bim-button class="phone-menu-toggler" icon="solar:settings-bold"
      @click=${()=>{g.classList.contains("options-menu-visible")?g.classList.remove("options-menu-visible"):g.classList.add("options-menu-visible")}}>
    </bim-button>
  `);document.body.append(Z);const u=new B;u.showPanel(2);document.body.append(u.dom);u.dom.style.left="0px";u.dom.style.zIndex="unset";a.renderer.onBeforeUpdate.add(()=>u.begin());a.renderer.onAfterUpdate.add(()=>u.end());
